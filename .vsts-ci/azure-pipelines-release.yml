# NOTE:
# We stop signing GraphicalTools now since we aren't doing anymore work on it until MAUI

name: PR-$(System.PullRequest.PullRequestNumber)-$(Date:yyyyMMdd)$(Rev:.rr)

variables:
  # Don't download unneeded packages
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: 'true'
  # Improve performance by not sending telemetry
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 'true'

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - /.dependabot/*
      - /.poshchan/*
      - /.github/**/*
      - /.vscode/**/*
      - /.vsts-ci/misc-analysis.yml
      - /tools/**/*
      - .editorconfig
      - .gitattributes
      - .gitignore
      - /docs/**/*
      - /CHANGELOG.md
      - /CONTRIBUTING.md
      - /README.md
      - /LICENSE.txt
      - /CODE_OF_CONDUCT.md

resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance


- stage: Build
  displayName: Build
  jobs:
  - job: 'ReleaseBuild'
    displayName: Release Build
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - template: templates/ci-general.yml
  - job: 'SignBuild'
    displayName: Signing Build
    dependsOn: 'ReleaseBuild'
    pool:
      name: 'Package ES CodeHub Lab E'
      demands: DotNetFramework
    steps:
    - powershell: |
        Get-ChildItem -Path env:
      displayName: Capture environment
      condition: succeededOrFailed()

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Build Artifacts'
      inputs:
        downloadType: specific

    - task: PowerShell@1
      displayName: 'Extract build zip'
      inputs:
        scriptType: inlineScript
        inlineScript: |
          Expand-Archive -Path "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\GraphicalTools\Microsoft.PowerShell.ConsoleGuiTools-Windows_NT.zip" -DestinationPath "$env:BUILD_ARTIFACTSTAGINGDIRECTORY\Microsoft.PowerShell.ConsoleGuiTools"

    - task: PkgESCodeSign@10
      displayName: 'CodeSign tools/releaseBuild/signing.xml'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      inputs:
        signConfigXml: tools/releaseBuild/signing.xml
        inPathRoot: '$(Build.ArtifactStagingDirectory)'
        outPathRoot: '$(Build.ArtifactStagingDirectory)\Signed'
    
    - template: EsrpSign.yml@ComplianceRepo
      parameters:
        # the folder which contains the binaries to sign
        buildOutputPath: $(Build.ArtifactStagingDirectory)
        # the location to put the signed output
        signOutputPath: $(Build.ArtifactStagingDirectory)\Signed
        # the certificate ID to use
        certificateId: "CP-230012"
        # The file pattern to use
        # If not using minimatch: comma separated, with * supported
        # If using minimatch: newline separated, with !, **, and * supported.
        # See link in the useMinimatch comments.
        pattern: 'Microsoft.PowerShell.*.dll,Microsoft.PowerShell.*.psd1,Microsoft.PowerShell.*.psm1'
        # decides if the task should use minimatch for the pattern matching.
        # https://github.com/isaacs/minimatch#features
        useMinimatch: false

    - template: EsrpSign.yml@ComplianceRepo
      parameters:
        # the folder which contains the binaries to sign
        buildOutputPath: $(Build.ArtifactStagingDirectory)
        # the location to put the signed output
        signOutputPath: $(Build.ArtifactStagingDirectory)\Signed
        # the certificate ID to use
        certificateId: "CP-231522"
        # The file pattern to use
        # If not using minimatch: comma separated, with * supported
        # If using minimatch: newline separated, with !, **, and * supported.
        # See link in the useMinimatch comments.
        pattern: 'NStack.dll,Terminal.Gui.dll'
        # decides if the task should use minimatch for the pattern matching.
        # https://github.com/isaacs/minimatch#features
        useMinimatch: false

    - task: PowerShell@1
      displayName: 'Copy signed files to unsigned folder'
      inputs:
        scriptType: inlineScript
        inlineScript: |
          $signed="$env:BUILD_ARTIFACTSTAGINGDIRECTORY\Signed\*"
          $notSigned="$env:BUILD_ARTIFACTSTAGINGDIRECTORY"
          Copy-Item $signed $notSigned -Recurse -Force

    - task: PowerShell@1
      displayName: 'Upload Artifacts'
      condition: succeededOrFailed()
      inputs:
        scriptType: inlineScript
        inlineScript: 'Write-Host "##vso[artifact.upload containerfolder=Microsoft.PowerShell.ConsoleGuiTools-Signed;artifactname=Microsoft.PowerShell.ConsoleGuiTools-Signed]$(Build.ArtifactStagingDirectory)\Microsoft.PowerShell.ConsoleGuiTools\Microsoft.PowerShell.ConsoleGuiTools"'

- stage: compliance
  displayName: Compliance
  dependsOn: Build
  jobs:
  - job: Compliance_Job
    pool:
      name: Package ES Standard Build
    steps:
    - checkout: self
    - checkout: ComplianceRepo
    - download: current
      artifact: Microsoft.PowerShell.ConsoleGuiTools-Signed

    - pwsh: |
        Get-ChildItem -Path "$(Pipeline.Workspace)\Microsoft.PowerShell.ConsoleGuiTools-Signed" -Recurse
      displayName: Capture downloaded artifacts

    - template: assembly-module-compliance.yml@ComplianceRepo
      parameters:
        # binskim
        AnalyzeTarget: '$(Pipeline.Workspace)\*.dll'
        AnalyzeSymPath: 'SRV*'
        # component-governance
        sourceScanPath: '$(Build.SourcesDirectory)'
        # credscan
        suppressionsFile: ''
        # TermCheck
        optionsRulesDBPath: ''
        optionsFTPath: ''
        # tsa-upload
        codeBaseName: 'PowerShell_GraphicalTools_20190809'
        # selections
        APIScan: false # set to false when not using Windows APIs.
